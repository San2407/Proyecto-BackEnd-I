components:
  schemas:
    Product:
      type: object
      properties:
        title:
          type: string
          description: Nombre del producto
        description:
          type: string
        code:
          type: string
          description: Código del producto
        price:
          type: number
          description: Precio
        stock:
          type: number
          description: Cantidad en stock
        status:
          type: boolean
          default: true
        category:
          type: string
          description: Categoría
        thumbnails:
          type: array
          items:
            type: string
      required:
      - title
      - description
      - code
      - price
      - stock
      - status
      - category

paths:
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags:
      - Products
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        required: false
        description: Número de pagina
      - in: query
        name: limit
        schema:
          type: integer
        required: false
        description: Cantidad de productos por pagina
      responses:
        200:
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        500:
          description: Error al obtener los productos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error al obtener los productos'
    post:
      summary: Crea un nuevo producto
      tags:
      - Products
      security:
      - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        201:
          description: Producto agregado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                message:
                  type: string
                  example: 'Producto agregado exitosamente'
                newProduct:
                  $ref: "#/components/schemas/Product"
        500:
          description: Error al agregar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error al agregar el producto'

  /api/products/{id}:
    get:
      summary: Obtiene un producto por su ID
      tags:
      - Products
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: ID del producto
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producto no encontrado'
        500:
          description: Error al obtener el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error al obtener el producto'
    put:
      summary: Actualiza un producto existente
      tags:
      - Products
      security:
      - cookieAuth: []
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: ID del producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
                properties:
                message:
                  type: string
                  example: 'Producto actualizado exitosamente'
        500:
          description: Error al actualizar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error al actualizar el producto'
    delete:
      summary: Elimina un producto existente
      tags:
      - Products
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: ID del producto
      responses:
        204:
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producto eliminado exitosamente'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producto no encontrado'
        500:
          description: Error al eliminar el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Error al eliminar el producto'
